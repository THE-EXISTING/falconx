import 'package:falconx/lib.dart';

extension SvgIcons on String? {
  Widget toSvg({
    Key? key,
    bool matchTextDirection = false,
    AssetBundle? bundle,
    String? package,
    double? width,
    double? height,
    BoxFit fit = BoxFit.contain,
    AlignmentGeometry alignment = Alignment.center,
    bool allowDrawingOutsideViewBox = false,
    WidgetBuilder? placeholderBuilder,
    String? semanticsLabel,
    bool excludeFromSemantics = false,
    SvgTheme theme = const SvgTheme(),
    ColorFilter? colorFilter,
    Clip clipBehavior = Clip.hardEdge,
    @deprecated Color? color,
    @deprecated BlendMode colorBlendMode = BlendMode.srcIn,
    @deprecated bool cacheColorFilter = false,
  }) =>
      SvgPicture.asset(
        this!,
        key: key,
        matchTextDirection: matchTextDirection,
        bundle: bundle,
        package: package,
        width: width,
        height: height,
        fit: fit,
        alignment: alignment,
        allowDrawingOutsideViewBox: allowDrawingOutsideViewBox,
        placeholderBuilder: placeholderBuilder,
        semanticsLabel: semanticsLabel,
        excludeFromSemantics: excludeFromSemantics,
        theme: theme,
        colorFilter: colorFilter,
        color: color,
        colorBlendMode: colorBlendMode,
        clipBehavior: clipBehavior,
        cacheColorFilter: cacheColorFilter,
      );

  Widget toSvgIcon({
    Key? key,
    bool matchTextDirection = false,
    AssetBundle? bundle,
    String? package,
    double size = 24,
    BoxFit fit = BoxFit.contain,
    AlignmentGeometry alignment = Alignment.center,
    bool allowDrawingOutsideViewBox = false,
    WidgetBuilder? placeholderBuilder,
    String? semanticsLabel,
    bool excludeFromSemantics = false,
    SvgTheme theme = const SvgTheme(),
    ColorFilter? colorFilter,
    Clip clipBehavior = Clip.hardEdge,
    @deprecated Color? color,
    @deprecated BlendMode colorBlendMode = BlendMode.srcIn,
    @deprecated bool cacheColorFilter = false,
  }) =>
      toSvg(
        key: key,
        matchTextDirection: matchTextDirection,
        bundle: bundle,
        package: package,
        width: size,
        height: size,
        fit: fit,
        alignment: alignment,
        allowDrawingOutsideViewBox: allowDrawingOutsideViewBox,
        placeholderBuilder: placeholderBuilder,
        semanticsLabel: semanticsLabel,
        excludeFromSemantics: excludeFromSemantics,
        theme: theme,
        colorFilter: colorFilter,
        color: color,
        colorBlendMode: colorBlendMode,
        clipBehavior: clipBehavior,
        cacheColorFilter: cacheColorFilter,
      );
}
